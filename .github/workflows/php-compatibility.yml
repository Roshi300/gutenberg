name: PHP Compatibility

on:
    pull_request:
    push:
        branches:
            - trunk
            - 'release/**'
            - 'wp/**'
    # Allow manually triggering the workflow.
    workflow_dispatch:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
    # The concurrency group contains the workflow name and the branch name for pull requests
    # or the commit hash for any other events.
    group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
    cancel-in-progress: true

jobs:
    # Runs PHP compatibility testing.
    #
    # Violations are reported inline with annotations.
    php-compatibility:
        name: Check PHP compatibility
        runs-on: ubuntu-latest
        timeout-minutes: 20
        if: ${{ github.repository == 'WordPress/gutenberg' || github.event_name == 'pull_request' }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

            - name: Set up PHP
              uses: shivammathur/setup-php@d30ad8b1843ace22e6698ab99bbafaa747b6bd0d # v2.24.0
              with:
                  php-version: '7.4'
                  coverage: none
                  tools: cs2pr

            # This date is used to ensure that the PHP compatibility cache is cleared at least once every week.
            # http://man7.org/linux/man-pages/man1/date.1.html
            - name: "Get last Monday's date"
              id: get-date
              run: echo "date=$(/bin/date -u --date='last Mon' "+%F")" >> $GITHUB_OUTPUT

            - name: Cache PHP compatibility scan cache
              uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920 # v3.0.11
              with:
                  path: .cache/phpcompat.json
                  key: ${{ runner.os }}-date-${{ steps.get-date.outputs.date }}-phpcompat-cache-${{ hashFiles('**/composer.json', 'phpcompat.xml.dist') }}

            # Since Composer dependencies are installed using `composer update` and no lock file is in version control,
            # passing a custom cache suffix ensures that the cache is flushed at least once per week.
            - name: Install Composer dependencies
              uses: ramsey/composer-install@83af392bf5f031813d25e6fe4cd626cdba9a2df6 # v2.2.0
              with:
                  custom-cache-suffix: ${{ steps.get-date.outputs.date }}

            - name: Make Composer packages available globally
              run: echo "${PWD}/vendor/bin" >> $GITHUB_PATH

            - name: Run PHP compatibility tests
              id: phpcs
              run: phpcs --report-full --report-checkstyle=./.cache/phpcs-compat-report.xml

            - name: Show PHPCompatibility results in PR
              if: ${{ always() && steps.phpcs.outcome == 'failure' }}
              run: cs2pr ./.cache/phpcs-compat-report.xml

            - name: Ensure version-controlled files are not modified during the tests
              run: git diff --exit-code
